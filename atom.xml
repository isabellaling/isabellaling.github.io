<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>荼荼小蘼</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-04T16:00:31.293Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Isabella Ling</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="http://yoursite.com/2019/09/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2019/09/04/Linux常用命令/</id>
    <published>2019-09-04T14:00:00.000Z</published>
    <updated>2019-09-04T16:00:31.293Z</updated>
    
    <content type="html"><![CDATA[<p>本文收录了Linux系统中的常用命令，便于自己查阅，会不定期更新哈。</p><h1 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h1><h2 id="处理文件"><a href="#处理文件" class="headerlink" title="处理文件"></a>处理文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建空文件</span></span><br><span class="line">touch filename; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制文件</span></span><br><span class="line">cp <span class="built_in">source</span> destination; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接文件</span></span><br><span class="line">ln filename link_filename; <span class="comment"># 相当于文件的快捷方式，删除链接文件不会影响远文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重命名文件</span></span><br><span class="line">mv oldname newname; <span class="comment"># 亦用于移动文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line">rm -rf filename; <span class="comment"># -r递归删除该目录下包含的子目录中的文件, -f强制删除文件，不做提示</span></span><br><span class="line">rm -i filename; <span class="comment"># -i提示是否真的要删除文件，删除敏感文件时建议使用这个参数，避免误删</span></span><br></pre></td></tr></table></figure><h2 id="处理目录"><a href="#处理目录" class="headerlink" title="处理目录"></a>处理目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">mkdir dirName; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除目录</span></span><br><span class="line">rmdir dirName; <span class="comment"># 只能删除空目录</span></span><br><span class="line">rm -r dirName; <span class="comment"># 递归删除目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换目录</span></span><br><span class="line"><span class="built_in">cd</span> destination; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示文件和目录列表</span></span><br><span class="line">ls -a; <span class="comment"># -a显示所有文件，包括隐藏文件</span></span><br><span class="line">ls -l; <span class="comment"># -l显示长列表，包含了目录中每个文件的更多相关信息</span></span><br><span class="line">ls -R; <span class="comment"># -R递归显示当前目录下包含的子目录中的文件</span></span><br><span class="line">ls -l my*; <span class="comment"># 显示当前目录下，以my开头的文件/文件夹</span></span><br></pre></td></tr></table></figure><h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看文件类型</span></span><br><span class="line">file filename; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件内容</span></span><br><span class="line">cat [option] filename; <span class="comment"># -n显示行号；-b只给有文本的行加上行号；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页显示文件内容</span></span><br><span class="line">more filename; <span class="comment"># 可以翻页，但只能向后翻页</span></span><br><span class="line">less filename; <span class="comment"># 可以翻页，且支持向前/向后翻页</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示文件最后几行的内容</span></span><br><span class="line">tail [option] filename; <span class="comment"># 默认显示最后10行，可以通过"-n 20"或者“-20”指定要看的行数。</span></span><br><span class="line"><span class="comment"># 显示文件开头几行的内容</span></span><br><span class="line">head [option] filename; <span class="comment"># 默认显示开头10行，可以通过"-n 20"或者“-20”指定要看的行数。</span></span><br></pre></td></tr></table></figure><h2 id="处理文件数据"><a href="#处理文件数据" class="headerlink" title="处理文件数据"></a>处理文件数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据过滤</span></span><br><span class="line"><span class="comment"># grep用于在大文件中找到匹配的数据，以行为单位</span></span><br><span class="line">grep [option] [pattern] [file]</span><br><span class="line">grep abc file1; <span class="comment"># 在file1中找到包含"abc"的行</span></span><br><span class="line">grep -n abc file1; <span class="comment"># -n显示匹配行所在的行号</span></span><br><span class="line">grep -c abc file1; <span class="comment"># 显示一共有多少行包含了abc</span></span><br><span class="line">grep -e a -e b file1; <span class="comment"># 在file1中找到包含"a"或者"b"的行。-e用于指定多个匹配模式。</span></span><br><span class="line">grep [ab] file1; <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据排序</span></span><br><span class="line">sort -n file1; <span class="comment"># 把file1的文件内容，以行为单位，按数值排序。</span></span><br><span class="line">du -sh | sort -nr; <span class="comment"># 当前目录下，按文件占用空间倒序排序，方便查看哪个文件占用空间最多。</span></span><br></pre></td></tr></table></figure><h2 id="压缩和归档"><a href="#压缩和归档" class="headerlink" title="压缩和归档"></a>压缩和归档</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 压缩单个文件</span></span><br><span class="line">gzip file1; <span class="comment"># 压缩file1, 得到file1.gz</span></span><br><span class="line">gzip file*; <span class="comment"># 压缩当前目录下，所有以file打头的文件，得到file1.gz,file2.gz,file3.gz,...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 归档，压缩多个文件</span></span><br><span class="line">tar -cvf test.rar /test1 /test2; <span class="comment"># 把test1目录和test2目录，归档到test.rar</span></span><br><span class="line"><span class="comment"># 列出归档文件的内容</span></span><br><span class="line">tar -tf test.rar;</span><br><span class="line"><span class="comment"># 提取归档文件的内容，即解压</span></span><br><span class="line">tar -xvf test.rar;</span><br><span class="line"><span class="comment"># -c创建一个新的归档文件；-v在处理文件时显示文件；-f 与-c一起时用于指定归档文件名，与-x一起时用于指定待提取的归档文件名。</span></span><br></pre></td></tr></table></figure><h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监测进程</span></span><br><span class="line">ps -ef; <span class="comment">#-e显示所有进程，-f显示更多信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实时监测进程</span></span><br><span class="line">top; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 pid; <span class="comment"># 通过pid删除进程</span></span><br><span class="line">killall http*; <span class="comment"># 通过通配符匹配进程名称进行删除</span></span><br></pre></td></tr></table></figure><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载磁盘</span></span><br><span class="line">mount; <span class="comment"># 输出所有挂载磁盘</span></span><br><span class="line">mount -t <span class="built_in">type</span> device directory; <span class="comment"># 挂载</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载磁盘</span></span><br><span class="line">umount [device|directory]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看磁盘使用情况</span></span><br><span class="line">df -h;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看某个目录的使用情况</span></span><br><span class="line">du;</span><br></pre></td></tr></table></figure><h1 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有全局变量</span></span><br><span class="line">printenv;</span><br><span class="line">env;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个全局变量，env不支持</span></span><br><span class="line">printenv HOME;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$HOME</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有环境变量，包括全局变量和局部变量。Linux并没有一个可以只显示局部环境变量的命令</span></span><br><span class="line"><span class="built_in">set</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置局部用户定义变量</span></span><br><span class="line">my_variable=<span class="string">"Hello World"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$my_variable</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置全局环境变量</span></span><br><span class="line"><span class="built_in">export</span> my_variable; <span class="comment"># 只在当前会话有效，关闭会话后失效。如果想永久生效，可把这句命令拷贝到linux启动脚本中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除环境变量</span></span><br><span class="line"><span class="built_in">unset</span> my_variable;</span><br></pre></td></tr></table></figure><h1 id="其他常用"><a href="#其他常用" class="headerlink" title="其他常用"></a>其他常用</h1><h2 id="近期使用的命令列表"><a href="#近期使用的命令列表" class="headerlink" title="近期使用的命令列表"></a>近期使用的命令列表</h2><p>bash shell会跟踪你用过的命令，并将其保存在.bash_history中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看最近用过的命令列表</span></span><br><span class="line"><span class="built_in">history</span>; <span class="comment"># 输出近期使用的命令列表，每个命令按执行时间顺序，带有行号。</span></span><br><span class="line"><span class="built_in">history</span> | tail -50; <span class="comment"># 查看最近用过的50条命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次执行最近的一条命令</span></span><br><span class="line">!!; <span class="comment"># 如刚执行了ls，此时再输入"!!"，会把ls再执行一遍</span></span><br><span class="line">!40; <span class="comment"># 执行第40条历史命令。</span></span><br></pre></td></tr></table></figure><p>最后，如果想不起来某个命令怎么用了，man一下看下文档就好啦～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文收录了Linux系统中的常用命令，便于自己查阅，会不定期更新哈。&lt;/p&gt;
&lt;h1 id=&quot;文件系统&quot;&gt;&lt;a href=&quot;#文件系统&quot; class=&quot;headerlink&quot; title=&quot;文件系统&quot;&gt;&lt;/a&gt;文件系统&lt;/h1&gt;&lt;h2 id=&quot;处理文件&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Mosh安装</title>
    <link href="http://yoursite.com/2019/08/20/Linux-Mosh/"/>
    <id>http://yoursite.com/2019/08/20/Linux-Mosh/</id>
    <published>2019-08-20T11:34:40.000Z</published>
    <updated>2019-09-04T07:05:10.531Z</updated>
    
    <content type="html"><![CDATA[<p>Mosh，又名Mobile Shell，是交互式终端ssh的替代品。</p><p>与ssh相比，mosh的优势如下：</p><ul><li>在wifi与蜂窝数据间任意切换网络，mosh连接不受影响。</li><li>永远保持连接。计算机随时可以休眠，重新唤醒后，mosh连接完好无损， 除非你手动把进程kill掉。 </li><li>无网络延迟。在你打字的时候，ssh会等待服务器的响应。而mosh正好相反，不管是在输入、删除还是编辑行，mosh都会即时响应，让你有种丝般顺滑的感觉。</li></ul><h2 id="mosh运行原理"><a href="#mosh运行原理" class="headerlink" title="mosh运行原理"></a>mosh运行原理</h2><p>mosh包含两个程序，mosh-client和mosh-server。客户端与服务端都需要安装mosh，但不需要手动启动mosh-client或者mosh-server，因为每次使用mosh，这两个程序都是自动启动的。</p><p><strong><em>默认情况下，mosh会通过ssh连接到服务器，然后在服务端启动mosh-server。接着他关闭ssh连接，在客户端启动mosh-client并通过UDP连接上服务器。</em></strong></p><p>之后这个连接一直存在，用户可以通过mosh做以前ssh能做的一切操作。除非mosh-client被kill掉，这个连接会一直保持，不管网络掉线还是客户端异常。</p><p>ps. mosh使用的是60000到61000的端口。</p><h2 id="如何安装"><a href="#如何安装" class="headerlink" title="如何安装"></a>如何安装</h2><p>ps. 本文只针对CentOS系统，其他系统的安装请参考<a href="https://mosh.org/" target="_blank" rel="noopener">mosh官网</a></p><p>CentOS下，最快的安装方式是使用yum。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mosh</span><br></pre></td></tr></table></figure><p><img src="/images/Linux-Mosh/install-mosh-failed.jpg" alt><br>如果提示无法匹配，那么你需要扩展yum源，安装epel库。</p><h3 id="扩展yum源"><a href="#扩展yum源" class="headerlink" title="扩展yum源"></a>扩展yum源</h3><ol><li><p>首先，确认你的CentOS版本。不同系统版本对应的epel库不一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/redhat-release</span><br></pre></td></tr></table></figure><p><img src="/images/Linux-Mosh/sys-version.jpg" alt></p></li><li><p>安装epel库。笔者的操作系统是CentOS 7，所以需执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br></pre></td></tr></table></figure><p>其他版本的CentOS系统可在<a href="https://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">EPEL wiki</a>获取到相应命令。</p></li><li><p>启用epel库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启用epel库</span></span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> epel</span><br><span class="line"><span class="comment"># 刷新仓库缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure></li><li><p>查看已启用的仓库列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p><img src="/images/Linux-Mosh/yum-repolist.jpg" alt></p></li><li><p>现在可以安装mosh啦，安装后无需手动启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mosh</span><br></pre></td></tr></table></figure><p><img src="/images/Linux-Mosh/install-mosh.jpg" alt><br>安装成功，现在去客户端尝试连接吧～</p></li></ol><h2 id="如何运行"><a href="#如何运行" class="headerlink" title="如何运行"></a>如何运行</h2><ol><li><p>如果你没有修改过ssh的端口，只需在客户端执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosh root@203.109.86.12</span><br></pre></td></tr></table></figure></li><li><p>如果已修改ssh端口，则需通过-P指定ssh的端口（注意-P是大写哦～(｡ì _ í｡)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosh -P 29806 root@203.109.86.12</span><br></pre></td></tr></table></figure></li></ol><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>mosh也并不全是优点，他有个bug，输出超过一屏时，只显示最后一屏的内容，不支持回滚。所以需要查看全部输出时，可在命令后加上”| less”来翻页查看。</p><p>不过这个问题跟永不掉线和丝般顺滑比起来，真的无伤大雅了。</p><p>听说这个问题会在新版本修复，敬请期待吧。。</p><p>最后的最后，推荐一个app呀，ios的Blink，可以连接服务器，而且支持mosh哟，每次mosh连上服务器后，不管ipad待机多久，都不用担心掉线，随时打开随时用，感觉真的棒极啦～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mosh，又名Mobile Shell，是交互式终端ssh的替代品。&lt;/p&gt;
&lt;p&gt;与ssh相比，mosh的优势如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在wifi与蜂窝数据间任意切换网络，mosh连接不受影响。&lt;/li&gt;
&lt;li&gt;永远保持连接。计算机随时可以休眠，重新唤醒后，mo
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="mosh" scheme="http://yoursite.com/tags/mosh/"/>
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
</feed>
